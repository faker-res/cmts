<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kthcorp.cmts.mapper.TestMapper">

    <select id="getCurrentDateTime" resultType="String">
        /* getCurrentDateTime */
        select NOW()
    </select>

    <select id="getVocList" resultType="map">
        select voc_id, question, answer from voc_list
    </select>

    <update id="uptVocListById" parameterType="map">
        update voc_list set words = #{words}
        where voc_id = #{voc_id}
    </update>

    <select id="getFaqList" resultType="map">
        select faq_id, question, answer from faq_list
    </select>

    <update id="uptFaqListById" parameterType="map">
        update faq_list set words = #{words}
        where faq_id = #{faq_id}
    </update>

    <insert id="insYjItems" parameterType="map">
        /* insYjItems */
        insert into yj_items
        (yj_id, type, purity_title, titleshort, stat, director, director_en
        , year, openday_kr, actors_display, actors_display_en, country_of_origin, yj_grade, regdate, regid)
        values (
        #{yj_id}, 'yj', #{purity_title}, #{titleshort}, 'Y',  #{director}, #{director_en}
        , #{year}, #{openday_kr}, #{actors_display}, #{actors_display_en}, #{country_of_origin}, #{yj_grade}, now(), 'ghkdwo77'
        )
    </insert>

    <insert id="insYcDatas" parameterType="map">
        /* insYcDatas */
        insert into yc_datas2
        (type, filecnt, title, words, regdate, content_id, series_id, kmrb_id, itemidx)
        values
        (#{type}, #{filecnt}, #{title}, #{words}, now(), #{content_id}, #{series_id}, #{kmrb_id}, #{itemidx})
    </insert>

    <select id="getYcDatas1st" resultType="map">
        /* getYcDatas1st */
        select * from (
            select yc.title, yc.titlecnt, yc.kmrb_id, yc.words
            , ( select purity_title from yj_items where yj_id = yc.kmrb_id) as purity_title
            from yc_datas yc
            where length(yc.words) > 2 and yc.titlecnt = 1
        ) c
    </select>

    <select id="getYcDatas2st" resultType="map">
        /* getYcDatas2st
        select * from (
        select yc.title, yc.titlecnt, yc.kmrb_id, yc.words
        , ( select purity_title from yj_items where yj_id = yc.kmrb_id) as purity_title
        , ( select replace(group_concat(content_id), " ", "") from ccube_contents where kmrb_id = yc.kmrb_id ) as content_id
        from yc_datas2 yc
        where length(yc.words) > 2 and titlecnt = 1
        ) c where c.content_id is not null;  */
        select * from (
            select yc.title, yc.titlecnt, yc.kmrb_id, yc.words
            , ( select purity_title from yj_items where yj_id = yc.kmrb_id) as purity_title
            from yc_datas2 yc
            where length(yc.words) > 2 and yc.titlecnt = 1
        ) c
    </select>

    <select id="getNoGenreItems" resultType="com.kthcorp.cmts.model.Items">
        /* getNoGenreItems */
        select a.cid,a.idx,a.title,a.genre from (
        select it.idx, it.title, it.cid
        , ( select meta from items_metas where idx = it.idx and  mtype = 'genre' ) as genre
        from items it
        ) a where a.genre is null

    </select>

    <select id="getItemsForSubgenre" resultType="map">
        /* getItemsForSubgenre */
        select ifs.*
        , ( select country_of_origin from ccube_contents where content_id = ifs.cid limit 1 ) as origin
        from items_for_subgenre ifs
    </select>

    <select id="getItemsAndSubgenre" resultType="map">
        /* getItemsAndSubgenre */
        select it.idx, it.cid, it.title
        , (select meta from items_metas where idx = it.idx and mtype = 'genre') as genre
        , it.kt_rating
        , (select meta from items_metas where idx = it.idx and mtype = 'subgenreMix') as subgenreMix
        , (select meta from items_metas where idx = it.idx and mtype = 'subgenreOrgin') as subgenreOrgin
        , (select meta from items_metas where idx = it.idx and mtype = 'subgenreword1') as subgenreword1
        , (select meta from items_metas where idx = it.idx and mtype = 'subgenreword2') as subgenreword2
        , (select meta from items_metas where idx = it.idx and mtype = 'subgenretopic1') as subgenretopic1
        , (select meta from items_metas where idx = it.idx and mtype = 'subgenretopic2') as subgenretopic2
        from items_for_subgenre it

    </select>

    <select id="getItemsStatRt" resultType="map">
        /* getItemsStatRt */
        select it.idx, it.cid, it.title
        , ( select count(*) from items_tags_keys where idx = it.idx and stat = 'S' ) as st_cnt
        from items it
        inner join items_stat iss on iss.idx = it.idx and iss.stat = 'RT'
    </select>

    <select id="getItemsForDaumAward" resultType="map">
        /* getItemsForDaumAward  */
        select it.idx, it.title, it.year
        from items it
        limit 10;
    </select>

    <select id="getItemsForSearchKeywords" resultType="map">
        /* getItemsForSearchKeywords  */
        select it.idx, it.title from items_stat iss
        inner join items it on it.idx = iss.idx
        where iss.stat = 'ST' and iss.regdate <![CDATA[ < ]]> '2018-04-11 00:00:00'
        #limit 10
    </select>


    <select id="cntItemsMetasForSubgenre" resultType="map" parameterType="java.lang.String">
        /* cntItemsMetasForSubgenre */
        select count(*) as cnt, mtype, meta from items_metas where mtype like concat ('subgenre','%')
        <if test='value != null and value != ""'>
            and mtype = #{value}
        </if>
        group by mtype, meta
    </select>

    <select id="getRtItems0417" resultType="map">
        /* getRtItems0417 */
        select it.idx, it.type, it.cid, it.title, it.regdate
        , (select count(*) from ccube_contents_orig where content_id = it.cid ) as cntcid
        , (select count(*) from ccube_series_orig where series_id = it.cid ) as cntsid
         from items it
        inner join items_stat iss on it.idx = iss.idx and iss.stat = 'RT'
        where it.tagcnt = 0
    </select>

    <select id="getContentsAssetList" resultType="map">
        /* getContentsAssetList */
        select cid, asset_id
        from ccube_contents_asset
    </select>

    <insert id="insContentsAsset" parameterType="map">
        /* insContentsAsset */
        insert into ccube_contents_asset_uniq (cid, asset_id)
        values
        <foreach collection="list" item="item" separator=" , ">
            (#{item.cid}, #{item.asset_id})
        </foreach>
    </insert>

    <select id="getSeriesAssetList" resultType="map">
        /* getSeriesAssetList */
        select sid, asset_id
        from ccube_series_asset
    </select>

    <insert id="insSeriesAsset" parameterType="map">
        /* insSeriesAsset */
        insert into ccube_series_asset_uniq (sid, asset_id)
        values
        <foreach collection="list" item="item" separator=" , ">
            (#{item.sid}, #{item.asset_id})
        </foreach>
    </insert>

    <select id="getCcubeContentsAll" resultType="map">
        /* getCcubeContentsAll */
        select
        it.idx
        , it.type
        , it.cid
        , cc.MASTER_CONTENT_ID mcid
        , cc.content_title
        , cc.eng_title
        , cc.director
        , cc.year
        , csu.asset_id
        from items it
        inner join items_stat iss on iss.idx = it.idx and iss.stat = 'ST'
        inner join ccube_contents cc on cc.content_id = it.cid
        inner join ccube_contents_asset_uniq csu on csu.cid = it.cid

    </select>

    <select id="getCcubeSeriesAll" resultType="map">
        /* getCcubeSeriesAll */
        select
        it.idx
        , it.type
        , it.cid
        , cc.series_nm as content_title
        , csu.asset_id
        from items it
        inner join items_stat iss on iss.idx = it.idx and iss.stat = 'ST'
        inner join ccube_series cc on cc.series_id = it.cid
        inner join ccube_series_asset_uniq csu on csu.sid = it.cid

    </select>


    <select id="getCcubeContentsFT" resultType="map">
        /* getCcubeContentsFT */
        select
        it.idx
        , it.type
        , it.cid
        , cc.MASTER_CONTENT_ID mcid
        , cc.content_title
        from items it
        inner join items_stat iss on iss.idx = it.idx and iss.stat = 'FT'
        inner join ccube_contents cc on cc.content_id = it.cid

    </select>

    <select id="getCcubeSeriesFT" resultType="map">
        /* getCcubeSeriesFT */
        select
        it.idx
        , it.type
        , it.cid
        , cc.series_nm as content_title
        from items it
        inner join items_stat iss on iss.idx = it.idx and iss.stat = 'FT'
        inner join ccube_series cc on cc.series_id = it.cid

    </select>
</mapper>